package {{package-name}};

{{imports}}


/**
	Interfaces for entity types which hold references to entities type of <code>{{table-reference}}</code>.
*/

public interface Has{{table-interface}} {
	
	public interface Read <
		A extends com.appspot.relaxe.ent.AttributeName,
		R extends com.appspot.relaxe.ent.Reference,
		T extends com.appspot.relaxe.types.ReferenceType<A, R, T, E, B, H, F, M>,
		E extends com.appspot.relaxe.ent.Entity<A, R, T, E, B, H, F, M> & Has{{table-interface}}.Read<A, R, T, E, B, H, F, M>,
		B extends com.appspot.relaxe.ent.MutableEntity<A, R, T, E, B, H, F, M> & Has{{table-interface}}.Write<A, R, T, E, B, H, F, M>,
		H extends com.appspot.relaxe.value.ReferenceHolder<A, R, T, E, H, M>,
		F extends com.appspot.relaxe.ent.EntityFactory<E, B, H, M, F>,
		M extends com.appspot.relaxe.ent.EntityMetaData<A, R, T, E, B, H, F, M> & Has{{table-interface}}Key<A, R, T, E, B, H, F, M>
		>
	{
		public {{table-interface}}.Holder get{{table-interface}}({{table-interface}}.Key<A, R, T, E, B, H, F, M> key);
		
	}

	public interface Write <
		A extends com.appspot.relaxe.ent.AttributeName,
		R extends com.appspot.relaxe.ent.Reference,
		T extends com.appspot.relaxe.types.ReferenceType<A, R, T, E, B, H, F, M>,
		E extends com.appspot.relaxe.ent.Entity<A, R, T, E, B, H, F, M> & Has{{table-interface}}.Read<A, R, T, E, B, H, F, M>,
		B extends com.appspot.relaxe.ent.MutableEntity<A, R, T, E, B, H, F, M> & Has{{table-interface}}.Write<A, R, T, E, B, H, F, M>,
		H extends com.appspot.relaxe.value.ReferenceHolder<A, R, T, E, H, M>,
		F extends com.appspot.relaxe.ent.EntityFactory<E, B, H, M, F>,
		M extends com.appspot.relaxe.ent.EntityMetaData<A, R, T, E, B, H, F, M> & Has{{table-interface}}Key<A, R, T, E, B, H, F, M>
	>
	{
		public void set{{table-interface}}({{table-interface}}.Key<A, R, T, E, B, H, F, M> key, {{table-interface}}.Holder newHolder);	
	}
}