
{	
	final {{referenced-table-interface-qualified}}.Key<
		{{table-interface}}.Attribute, 
		{{table-interface}}.Reference, 
		{{table-interface}}.Type, 
		{{table-interface}}, 
		{{table-interface}}.Mutable,
		{{table-interface}}.Holder,
		{{table-interface}}.Factory,
		{{table-interface}}.MetaData
	>
	pk = {{table-interface}}.{{reference-key-variable}};			
				
	com.appspot.relaxe.meta.ForeignKey fk = m.getForeignKey(pk.name());				
	com.appspot.relaxe.expr.TableReference tref = ctx.getQueryContext().getReferenced(tableRef, fk);

	if (tableRef != null || tref != null) {
		{{referenced-table-interface-qualified}}.MetaData pm = pk.getTarget();
		final {{referenced-table-interface-qualified}}.Builder nb = pm.newBuilder(tableRef, fk, tref, ctx, unificationContext);						

		ll.add(new Linker() {							
			@Override
			public void link(com.appspot.relaxe.ent.DataObject src, {{table-interface}}.Holder dest) {
				if (dest != null && (!dest.isNull())) {
					{{referenced-table-interface-qualified}}.Holder np = nb.read(src);								
					pk.set(dest.value().asMutable(), np);
				}
			}
		});
 	} 
}
